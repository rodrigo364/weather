// Generated by Dagger (https://dagger.dev).
package br.com.weather.presentation.ui.realtime;

import br.com.weather.domain.usecases.realtimeweather.GetCurrentRealTimeWeatherUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CurrentWeatherViewModel_Factory implements Factory<CurrentWeatherViewModel> {
  private final Provider<GetCurrentRealTimeWeatherUseCase> getCoinsUseCaseProvider;

  public CurrentWeatherViewModel_Factory(
      Provider<GetCurrentRealTimeWeatherUseCase> getCoinsUseCaseProvider) {
    this.getCoinsUseCaseProvider = getCoinsUseCaseProvider;
  }

  @Override
  public CurrentWeatherViewModel get() {
    return newInstance(getCoinsUseCaseProvider.get());
  }

  public static CurrentWeatherViewModel_Factory create(
      Provider<GetCurrentRealTimeWeatherUseCase> getCoinsUseCaseProvider) {
    return new CurrentWeatherViewModel_Factory(getCoinsUseCaseProvider);
  }

  public static CurrentWeatherViewModel newInstance(
      GetCurrentRealTimeWeatherUseCase getCoinsUseCase) {
    return new CurrentWeatherViewModel(getCoinsUseCase);
  }
}
