// Generated by Dagger (https://dagger.dev).
package br.com.weather.data.repository;

import br.com.weather.data.network.service.RealtimeWeatherService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RealTimeWeatherRepositoryImp_Factory implements Factory<RealTimeWeatherRepositoryImp> {
  private final Provider<RealtimeWeatherService> serviceProvider;

  public RealTimeWeatherRepositoryImp_Factory(Provider<RealtimeWeatherService> serviceProvider) {
    this.serviceProvider = serviceProvider;
  }

  @Override
  public RealTimeWeatherRepositoryImp get() {
    return newInstance(serviceProvider.get());
  }

  public static RealTimeWeatherRepositoryImp_Factory create(
      Provider<RealtimeWeatherService> serviceProvider) {
    return new RealTimeWeatherRepositoryImp_Factory(serviceProvider);
  }

  public static RealTimeWeatherRepositoryImp newInstance(RealtimeWeatherService service) {
    return new RealTimeWeatherRepositoryImp(service);
  }
}
